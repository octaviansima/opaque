include "Expr.fbs";

// This file is part of the interface between Spark SQL and the SGX enclave --
// the "trusted-untrusted interface," or TUIX.

namespace edu.berkeley.cs.rise.opaque.tuix;

// Filter
table FilterExpr {
    condition:Expr;
}

// Project
table ProjectExpr {
    project_list:[Expr];
}

// Sort
enum SortDirection : ubyte {
    Ascending, Descending
}

table SortOrder {
    child:Expr;
    direction:SortDirection;
}

table SortExpr {
    sort_order:[SortOrder];
}

// Aggregate
table PartialAggregateExpr {
    initial_values: [Expr];
    update_exprs: [Expr];
}
table AggregateExpr {
    initial_values: [Expr];
    update_exprs: [Expr];
    evaluate_exprs: [Expr];
}
// Supported: Average, Count, First, Last, Max, Min, Sum

table AggregateOp {
    // Given an input row, extract its group.
    grouping_expressions:[Expr];
    // Given multiple input rows from the same group, compute their aggregate.
    aggregate_expressions:[AggregateExpr];
}

// Join
enum JoinType : ubyte {
    Inner, FullOuter, LeftOuter, RightOuter, LeftSemi, LeftAnti, Cross
}
table JoinExpr {
    join_type:JoinType;
    // In the case of equi joins, we store parallel arrays of key expressions and have the join output 
    // pairs of rows  where each expression from the left is equal to the matching expression from the right.
    left_keys:[Expr];
    right_keys:[Expr];
    // In the case of non-equi joins, we pass in a condition 
    // as an expression and evaluate that on each pair of rows.
    condition:Expr;
}
